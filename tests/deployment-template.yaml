---
# Source: application/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-application  
  labels:
    app.kubernetes.io/name: release-name-application
    helm.sh/chart: application-0.1.0-alpha
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name-application  
  annotations:
spec:
  revisionHistoryLimit: 0
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: release-name-application
  template:
    metadata:      
      labels:
        app.kubernetes.io/name: release-name-application
        helm.sh/chart: application-0.1.0-alpha
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: release-name-application      
      annotations:
    spec:      
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                    - release-name-application
              topologyKey: "kubernetes.io/hostname"
      securityContext:
        runAsUser: 1000
        fsGroup: 1000      
      volumes:
        - name: bulk-scan
          flexVolume:
            driver: "azure/kv"
            secretRef:
              name: kvcreds
            options:
              usepodidentity: "false"
              tenantid: "531ff96d-0ae9-462a-8d2d-bec7c0b42082"
              keyvaultname: "bulk-scan-aat"
              keyvaultobjectnames: "idam-client-secret;s2s-secret"
              keyvaultobjecttypes: "secret;secret"
        - name: s2s
          flexVolume:
            driver: "azure/kv"
            secretRef:
              name: kvcreds
            options:
              usepodidentity: "false"
              tenantid: "531ff96d-0ae9-462a-8d2d-bec7c0b42082"
              keyvaultname: "s2s-aat"
              keyvaultobjectnames: "microservicekey-ccd-admin;microservicekey-ccd-data"
              keyvaultobjecttypes: "secret;secret"      
      dnsConfig:
        options:
          - name: ndots
            value: "3"
      containers:
        - image: hmctspublic.azurecr.io/chart-nodejs/testapp
          name: release-name-application
          securityContext:
            allowPrivilegeEscalation: false
          env:        
            - name: REFORM_ENVIRONMENT
              value: "preview"
            - name: REFORM_SERVICE_NAME
              value: "rhubarb-frontend"
            - name: REFORM_TEAM
              value: "cnp"
          envFrom:
            - configMapRef:
                name: release-name-application  
          volumeMounts:
            - name: "bulk-scan"
              mountPath: "/mnt/secrets/bulk-scan"
              readOnly: true
            - name: "s2s"
              mountPath: "/mnt/secrets/s2s"
              readOnly: true
          resources:
            requests:
              memory: 64Mi
              cpu: 25m
            limits:
              memory: 512Mi
              cpu: 500m
          ports:
            - containerPort: 3000
              name: http
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: 3000
            initialDelaySeconds: 5
            timeoutSeconds: 3
            periodSeconds: 15
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 5
            timeoutSeconds: 3
            periodSeconds: 15
          imagePullPolicy: Always
